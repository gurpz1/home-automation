version: '3.8'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx:/etc/nginx
      - ./nginx/logs:/var/log/nginx/log
    ports:
      - 80:80
      - 443:443
      - 1883:1883
      - 883:883
    restart: always
    networks:
      - admin
      - external
      - iot-network
      - monitoring
  
  openhab:
    image: openhab/openhab:latest
    container_name: openhab
    volumes:
      - ./openhab/addons:/openhab/addons
      - ./openhab/conf:/openhab/conf
      - ./openhab/userdata:/openhab/userdata
    depends_on:
      - mosquitto
      - zigbee2mqtt
      - influxdb
    restart: always
    networks:
      - iot-network
      - monitoring
      - external
    environment:
      - EXTRA_JAVA_OPTS=-Xms16m -Xmx1024m -Xbootclasspath/a:/openhab/conf/libs/jython/jython-2.7.2.jar -Dpython.home=/openhab/conf/automation/jsr223/python -Dpython.path=/openhab/conf/automation/lib/python
      - USER_ID=1002
      - GROUP_ID=100
    expose:
      - "8080"
      - "8443"
    dns: "192.168.1.1"
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 1024M

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    user: 1003:1003
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    expose:
      - "1883"
      - "9001"
    restart: always
    networks:
      - iot-network
  
  zigbee2mqtt:
    image: koenkk/zigbee2mqtt:latest
    container_name: zigbee2mqtt
    devices:
      - /dev/ttyUSB0
    volumes:
      - ./zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    restart: always
    environment:
      - TZ=Europe/London
    networks:
      - iot-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: 1005:1005
    restart: always
    volumes:
      - ./grafana:/etc/grafana
      - ./grafana/log:/var/log/grafana
    expose:
      - "3000"
    networks:
      - monitoring

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    user: 1004:1004
    restart: always
    volumes:
      - ./influxdb:/var/lib/influxdb
      - ./influxdb/influxdb.conf:/etc/influxdb/influxdb.conf
    networks:
      - monitoring
    expose:
      - "8086"

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    expose:
      - "9000"
      - "8000"
    restart: always
    networks:
      - admin


networks:
  monitoring:
    name: monitoring
    internal: true
    driver: bridge
  iot-network:
    name: iot-network
    internal: true
    driver: bridge
  admin:
    name: admin
    internal: true
    driver: bridge
  external:
    name: external
    driver: bridge

